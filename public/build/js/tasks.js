!function(){!async function(){try{const t="/api/tasks?id="+c(),n=await fetch(t),o=await n.json();e=o.tasks,a()}catch(e){console.log(e)}}();let e=[],t=[];document.querySelector("#add-task").addEventListener("click",(function(){o()}));function n(n){const o=n.target.value;t=""!==o?e.filter(e=>e.state===o):[],a()}function a(){!function(){const e=document.querySelector(".task-list");for(;e.firstChild;)e.removeChild(e.firstChild)}(),function(){const t=e.filter(e=>"0"===e.state),n=document.querySelector("#pending");0===t.length?n.disabled=!0:n.disabled=!1}(),function(){const t=e.filter(e=>"1"===e.state),n=document.querySelector("#completed");0===t.length?n.disabled=!0:n.disabled=!1}();const n=t.length?t:e;if(0===n.length){const e=document.querySelector("#task-list"),t=document.createElement("LI");return t.textContent="Todavía no has añadido ninguna tarea al proyecto actual.",t.classList.add("no-tasks"),void e.appendChild(t)}const i={0:"Pendiente",1:"Terminada"};n.forEach(t=>{const n=document.createElement("LI");n.dataset.taskId=t.id,n.classList.add("task");const d=document.createElement("DIV");d.classList.add("text");const r=document.createElement("P");r.textContent=t.name;const l=document.createElement("IMG");l.src="build/img/edit.svg",l.onclick=function(){o(!0,{...t})};const u=document.createElement("DIV");u.classList.add("options");const m=document.createElement("BUTTON");m.classList.add("task-state"),m.classList.add(""+i[t.state].toLowerCase()),m.textContent=i[t.state],m.dataset.taskState=t.state,m.style.cursor="default";const p=document.createElement("BUTTON");p.classList.add("task-remove"),p.dataset.taskId=t.id,p.textContent="Eliminar",p.onclick=function(){!function(t){Swal.fire({title:"¿Estás seguro de que quieres eliminar esta tarea?",icon:"warning",showCancelButton:!0,confirmButtonColor:"#3085d6",cancelButtonColor:"#d33",confirmButtonText:"Sí, estoy seguro",cancelButtonText:"No"}).then(n=>{n.isConfirmed&&async function(t){const{state:n,id:o,name:s}=t,i=new FormData;i.append("id",o),i.append("name",s),i.append("state",n),i.append("projectId",c());try{const n="/api/tasks/remove",o=await fetch(n,{method:"POST",body:i}),s=await o.json();s.result&&Swal.fire("Eliminada",s.message,"success"),e=e.filter(e=>e.id!==t.id),a()}catch(e){console.log(e)}}(t)})}({...t})};const f=document.createElement("IMG");f.src="Pendiente"===i[t.state]?"build/img/pending.png":"build/img/completed.png",f.onclick=function(){!function(e){const t="1"===e.state?"0":"1";e.state=t,s(e)}({...t})};const h=document.createElement("DIV");h.classList.add("div-img"),h.appendChild(f),u.appendChild(h),u.appendChild(m),u.appendChild(p),d.appendChild(r),d.appendChild(l),n.appendChild(d),n.appendChild(u);document.querySelector("#task-list").appendChild(n)})}function o(t=!1,n=""){const o=document.createElement("DIV");o.classList.add("window"),o.innerHTML=`\n            <form class='form new-task'>\n                <legend>${t?"Editar tarea":"Añadir nueva tarea"}</legend>\n                <div class='field'>\n                    <label for="task">Tarea</label>\n                    <input type='text' name='task' placeholder="${n.name?"Editar la tarea actual":"Añadir una tarea a este proyecto"}" id='task' value="${n.name?n.name:""}">\n                </div>\n                <div class="options">\n                    <input type="submit" class="submit-new-task" value="${n.name?"Guardar cambios":"Añadir tarea"}">\n                        <button type="button" class="close-window">Cancelar</button>\n                </div>\n            </form>`,setTimeout(()=>{document.querySelector(".form").classList.add("animate")},0),o.addEventListener("click",(function(i){if(i.preventDefault(),i.target.classList.contains("close-window")||i.target.classList.contains("window")){document.querySelector(".form").classList.add("close"),setTimeout(()=>{o.remove()},500)}if(i.target.classList.contains("submit-new-task")){const o=document.querySelector("#task").value.trim();if(""===o||o.length>=60)return void function(e,t,n){const a=document.querySelector(".alert");a&&a.remove();const o=document.createElement("DIV");o.classList.add("alert",t),o.textContent=e,n.parentElement.insertBefore(o,n.nextElementSibling),setTimeout(()=>{o.remove()},5e3)}("Nombre de la tarea inválido","error",document.querySelector(".form legend"));t?(n.name=o,s(n)):async function(t){const n=new FormData;n.append("name",t),n.append("projectId",c());try{const o="/api/tasks",s=await fetch(o,{method:"POST",body:n}),c=await s.json();if("exito"===c.type){Swal.fire("Tarea agregada correctamente",c.message,"success");const n=document.querySelector(".window");setTimeout(()=>{n.remove()},500);const o={id:String(c.id),name:t,state:"0",projectId:c.projectId};e=[...e,o],a()}}catch(e){console.log("error")}}(o)}})),document.querySelector(".dashboard").appendChild(o)}async function s(t){const{state:n,id:o,name:s}=t,i=new FormData;i.append("id",o),i.append("name",s),i.append("state",n),i.append("projectId",c());try{const t="/api/tasks/update",c=await fetch(t,{method:"POST",body:i}),d=await c.json();if("exito"===d.type){Swal.fire(d.message,d.message,"success");const t=document.querySelector(".window");t&&t.remove(),e=e.map(e=>(e.id===o&&(e.state=n,e.name=s),e)),a()}}catch(e){console.log(e)}}function c(){const e=new URLSearchParams(window.location.search);return Object.fromEntries(e.entries()).id}document.querySelectorAll("#filters input[type='radio']").forEach(e=>{e.addEventListener("input",n)})}();